// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model for authentication
model User {
  id           String        @id @default(uuid())
  firstName    String
  lastName     String
  email        String        @unique
  password     String
  otp          String?
  otpExpiry    DateTime?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  products     Product[]
  rawMaterials RawMaterial[] // Relation to raw materials
}

// Raw Material (Ingredient) model
model RawMaterial {
  id        String              @id @default(uuid())
  name      String
  cost      Float // Cost per quintal in INR
  createdAt DateTime            @default(now())
  updatedAt DateTime            @updatedAt
  products  ProductIngredient[]
  userId    String // Foreign key to User
  user      User                @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([name, userId]) // A user cannot have two materials with the same name
}

// Product model
model Product {
  id             String              @id @default(uuid())
  name           String
  additionalCost Float // e.g., labor, electricity per quintal
  totalCost      Float // This will be calculated and stored
  createdAt      DateTime            @default(now())
  updatedAt      DateTime            @updatedAt
  userId         String
  user           User                @relation(fields: [userId], references: [id], onDelete: Cascade)
  ingredients    ProductIngredient[]

  @@unique([name, userId]) // A user cannot have two products with the same name
}

// This is a "join table" to link Products and RawMaterials
// It stores the percentage of each ingredient in a product
model ProductIngredient {
  id            String      @id @default(uuid())
  percentage    Float // The percentage of this ingredient in the product
  productId     String
  product       Product     @relation(fields: [productId], references: [id], onDelete: Cascade)
  rawMaterialId String
  rawMaterial   RawMaterial @relation(fields: [rawMaterialId], references: [id], onDelete: Cascade)

  @@unique([productId, rawMaterialId]) // An ingredient can only appear once per product
}

